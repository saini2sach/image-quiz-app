{"version":3,"sources":["components/Option.js","components/Timer.js","components/MainContent.js","components/Hero.js","components/Continue.js","components/Footer.js","components/DisplayResult.js","components/PlayAgain.js","ImageQuiz.js","registerServiceWorker.js","index.js"],"names":["Option","props","className","onClick","event","item","obj","target","isAnswerCorrect","answer","classList","add","allOptionsObj","document","querySelectorAll","disabled","enableContinueBtn","handleClick","replace","Timer","minPart","Math","floor","totalSecs","secPart","state","min","sec","count","nextProps","nextState","nextContext","this","timerId","setTimeout","setState","prevState","clearTimeout","showResult","Component","MainContent","imageUrl","src","alt","correctAnswer","height","timerLimit","setOfAnswer","map","index","key","Hero","Continue","newPuzzle","Footer","id","DisplayResult","resultList","filter","length","quesShouldAttempt","oneQuesAttemptTime","efficiencyPerc","data-item","isNaN","PlayAgain","resetQuiz","getDataApi","_self","getRandomItem","arr","random","indexOf","fetch","then","response","json","data","itemLists","listOfItem","imageObj","list","name","i","randomItem","push","selectedPhotoName","randomUrl","showContinueBtn","ImageQuiz","initialState","isTimerReached","remove","savedResult","concat","bind","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","getElementById","URL","process","origin","addEventListener","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.7b231868.chunk.js","sourcesContent":["\nimport React from 'react';\n\nconst Option = (props) => {\n    const handleClick = (event, item) => {\n        const obj = event.target;\n        let isAnswerCorrect = false;\n        if(item === props.answer) {\n            obj.classList.add('green');\n            isAnswerCorrect = true;\n        }\n        else {\n            obj.classList.add('red');\n        }\n        const allOptionsObj = document.querySelectorAll('.item-options .option');\n        for(var itemObj of allOptionsObj) {\n            itemObj.disabled = true;\n        }\n        props.enableContinueBtn(isAnswerCorrect);\n    }\n    return (\n        <button className=\"option\" onClick={(event) => handleClick(event, props.item)}>\n            {props.item.replace(/_/g, \" \")}\n        </button>\n    )\n}\n\nexport default Option;","import React, { Component } from 'react';\nimport '../css/timer.css'\n\nclass Timer extends Component {\n  constructor(props) {\n    super(props);\n    const minPart = Math.floor(this.props.totalSecs / 60);\n    const secPart = this.props.totalSecs % 60;\n    this.state = {\n      min: minPart,\n      sec: secPart,\n      count: this.props.totalSecs\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\n    return nextState !== this.state;\n  }\n\n  render() {\n\n    let {count, min, sec} = this.state;\n\n    let timerId = setTimeout( () => {\n    \tthis.setState( (prevState) => ({\n        sec: (prevState.sec === 0) ? 59 : prevState.sec - 1,\n        min: (prevState.sec === 0) ? prevState.min - 1 : prevState.min,\n        count: prevState.count - 1\n      }))\n    }, 1000);\n\n    if(count <= 0 ){\n    \tclearTimeout(timerId);\n      this.props.showResult();\n    }\n\n    return (\n      <div className=\"clock-timer\">\n        <span className=\"min-clock\">\n            {(min < 10) ? '0'+ min : min}\n            <span className=\"overed\"> </span>\n          </span>\n          <span className=\"clock-seprator\"> : </span>\n          <span className=\"sec-clock\">\n              {(sec < 10) ? '0'+sec : sec}\n              <span className=\"overed\"> </span>\n          </span>\n      </div>\n    )\n  }\n}\n\nexport default Timer;","import React from 'react';\n\nimport Option from './Option';\nimport Timer from './Timer';\nimport '../css/loader.css';\n\n\nfunction MainContent(props) {\n    return (\n        <div className=\"col-10 offset-1 main-content clearfix\">\n            <div className=\"col-lg-4 float-left item-image\">\n                { props.imageUrl \n                    ? <img src={props.imageUrl} className=\"author-image\" alt={props.correctAnswer} height=\"250px\" />\n                    : <div className=\"loader\"></div>\n                }\n            </div>\n            <div className=\"float-left col-lg-2 timer-comp\">\n                <Timer totalSecs={props.timerLimit} showResult={props.showResult}/>\n            </div>\n            { props.imageUrl \n                ? <div className=\"col-lg-5 float-right item-options\">\n                    {props.setOfAnswer.map( (item, index) => <Option item={item} key={index} enableContinueBtn={props.enableContinueBtn} answer={props.correctAnswer}/>)}\n                  </div>\n                : <div className=\"col-lg-5 float-right item-options option-loader\">\n                    <div className=\"loader\"></div>\n                  </div>\n            }\n        </div>\n    )\n}\n\nexport default MainContent;","import React from 'react';\n\nfunction Hero() {\n    return (\n        <header className=\"col-10 offset-1 hero-header\">\n            <h1>Guess the Image.!</h1>\n            <p>Select the appropricate answer for the pictures Shown.</p>\n        </header>\n    )\n}\n\nexport default Hero;","import React from 'react';\n\nfunction Continue(props) {\n    return (\n        <div className=\"continue-btn-wrapper\">\n            <button className=\"continue-btn\" onClick={(event) => { event.target.disabled = true; props.newPuzzle()}}>\n                Continue\n            </button>\n        </div>\n    )\n}\n\nexport default Continue;","import React from 'react';\n\nfunction Footer() {\n    return (\n        <footer className=\"row col-10 offset-1\" id=\"footer\">\n                <ul>\n                    <li>Make sure to attempt answer correctly with in given time-frame.</li>\n                    <li>For winnng, Accuracy >= 75% and Total Questions attempted >= Round_Of(Total Time / 5 Seconds)</li>\n                    <li>After the time-lapse, it shows your result accordingly.</li>\n                </ul>\n        </footer>\n    )\n}\n\nexport default Footer;","\nimport React from 'react';\n\nfunction DisplayResult(props) {\n    const correctAnswer = props.resultList.filter( item => item === true ).length;\n    const quesShouldAttempt = Math.floor(props.timerLimit / props.oneQuesAttemptTime);\n    const efficiencyPerc = Math.floor((correctAnswer/props.resultList.length)*100);\n    return (\n        <div className=\"col-10 offset-1 main-content display-result\" data-item={props.resultList}>\n            <p>\n                Your score : {correctAnswer} / {props.resultList.length}\n            </p>\n            <ul>\n                <li className=\"win-lose\">\n                    { (efficiencyPerc >= 80) && (props.resultList.length > quesShouldAttempt)\n                        ? <span className=\"winner-label\">Congrats, You Won!</span>\n                        : <span className=\"loser-label\">You Lose ({(efficiencyPerc >= 80) ? \" \"+quesShouldAttempt +\" - Questions should be attempted\" : \" As Accuracy is below 80%\"})</span>\n                    }\n                </li>\n                <li>Total time-frame - <b>{props.timerLimit} seconds.</b></li>\n                <li>Total Questions Attempted - <b>{props.resultList.length}</b></li>\n                <li>Correct Answer - <b>{correctAnswer}</b></li>\n                <li>Accuracy - <b>{isNaN(efficiencyPerc) ? 0 : efficiencyPerc} %</b></li>\n            </ul>\n        </div>\n    )\n}\n\nexport default DisplayResult;","import React from 'react';\n\nfunction PlayAgain(props) {\n    return (\n        <div className=\"continue-btn-wrapper\">\n            <button className=\"continue-btn\" onClick={(event) => { event.target.disabled = true; props.resetQuiz()}}>\n                Play Again\n            </button>\n        </div>\n    )\n}\n\nexport default PlayAgain;","import React, { Component } from 'react';\n\nimport './css/ImageQuiz.css';\nimport './css/bootstrap-min.css';\n\nimport MainContent from './components/MainContent';\nimport Hero from './components/Hero';\nimport Continue from './components/Continue';\nimport Footer from './components/Footer';\nimport DisplayResult from './components/DisplayResult';\nimport PlayAgain from './components/PlayAgain';\n\nconst getDataApi = (_self) =>{\n  const getRandomItem = (arr) => {\n    let item = arr[Math.floor(Math.random() * arr.length)];\n\n    if(item.indexOf(' ') >= 0) {\n      item = item.replace(/ /g,\"_\");\n    }\n    return item;\n  };\n\n  fetch('https://demo6817798.mockable.io/getImageQuizAppData')\n    .then( (response) => response.json())\n    .then((data) => {\n      let listOfItem = [],\n          itemLists = [],\n          imageObj = {\n            prefix: 'img/things/',\n            suffix: '.jpg'\n          };\n      \n      itemLists = data.list.map( (item) => item.name);\n\n      for(let i=0; i < 4; i++) {\n        let randomItem = getRandomItem(itemLists);\n        listOfItem.push(randomItem);\n      }\n\n      const selectedPhotoName = getRandomItem(listOfItem);\n      const randomUrl = 'https://www.randomlists.com/'+ imageObj.prefix +''+ selectedPhotoName +''+imageObj.suffix;\n\n      _self.setState({\n        imageUrl: randomUrl,\n        correctAnswer: selectedPhotoName,\n        setOfAnswer: listOfItem,\n        showContinueBtn: false\n      })\n  })\n}\n\nclass ImageQuiz extends Component {\n  constructor(props) {\n    super(props);\n    this.enableContinueBtn = this.enableContinueBtn.bind(this);\n    this.newPuzzle = this.newPuzzle.bind(this);\n    this.showResult = this.showResult.bind(this);\n  }\n\n  static initialState = () => ({\n    imageUrl: '',\n    correctAnswer: '',\n    setOfAnswer: [],\n    savedResult: [],\n    showContinueBtn: false,\n    timerLimit: 35,\n    isTimerReached: false,\n    oneQuesAttemptTime: 5\n  })\n\n  state = ImageQuiz.initialState();\n\n  showResult = () => {\n    this.setState({\n      isTimerReached: true,\n      showContinueBtn: false\n    })\n  }\n\n  resetQuiz = () => {\n    var _self = this;\n    this.setState(ImageQuiz.initialState());\n    getDataApi(_self);\n  }\n\n  newPuzzle = () => {\n    var _self = this;\n    const allOptionsObj = document.querySelectorAll('.item-options .option');\n    for(var obj of allOptionsObj) {\n      obj.classList.remove('red', 'green');\n    }\n    this.setState({\n      imageUrl: ''\n    })\n    getDataApi(_self);\n  }\n\n  enableContinueBtn = (isAnswerCorrect) => {\n    this.setState( (prevState) => ({\n      showContinueBtn: true,\n      savedResult: prevState.savedResult.concat(isAnswerCorrect)\n    }))\n  }\n\n  componentDidMount() {\n    var _self = this;\n    getDataApi(_self);\n  }\n\n  render() {\n    let {imageUrl, correctAnswer, setOfAnswer, showContinueBtn, timerLimit, savedResult, oneQuesAttemptTime} = this.state;\n    return (\n      <div className=\"container-fluid\">\n        <Hero />\n        { !this.state.isTimerReached\n          ? <MainContent \n              imageUrl={imageUrl} \n              correctAnswer= {correctAnswer}\n              setOfAnswer={setOfAnswer}\n              showContinueBtn={showContinueBtn}\n              enableContinueBtn={this.enableContinueBtn}\n              timerLimit={timerLimit}\n              showResult={this.showResult}\n            />\n          : <div>\n              <DisplayResult \n                resultList={savedResult}\n                timerLimit={timerLimit}\n                oneQuesAttemptTime={oneQuesAttemptTime}\n              />\n              <PlayAgain resetQuiz={this.resetQuiz}/>\n            </div>\n        }        \n        { showContinueBtn && <Continue newPuzzle={this.newPuzzle}/>}\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default ImageQuiz;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport ImageQuiz from './ImageQuiz';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<ImageQuiz />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}